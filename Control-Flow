


# returning true if input is divisble by 10 - finally a practical use of the modulus operator. 

def divisible_by_ten(num):                        # first way of doing it 
    a = num % 10
    if a <= 0:
        return True
    else:
        return False

print(divisible_by_ten(20))
# should print True
print(divisible_by_ten(25))
# should print False


def divisible_by_ten(num):                     # second way of doing it 
    if (num % 10 ==0):
        return True
    else:
        return False

print(divisible_by_ten(20))
print(divisible_by_ten(25))






# function for returning a True if budget is less than outgoings for the month 


def over_budget(budget, food_bill, electricity_bill, internet_bill, rent):
    non_budget_total = food_bill + electricity_bill + internet_bill + rent
    if budget < non_budget_total:
        return True
    else:
        return False

print(over_budget(100, 20, 30, 10, 40))
print(over_budget(80, 20, 30, 10, 30))





# returning true if the combined value of num1 and num2 does NOT equal 10 


def not_sum_to_ten(num1, num2):
    if num1 + num2 !=10:                           # using the not equal to operator 
        return True 
    else:
        return False

print(not_sum_to_ten(9, -1))
# should print True
print(not_sum_to_ten(9, 1))
# should print False
print(not_sum_to_ten(5,5))





# basic conditional statements  

def in_range(num,lower,upper):
    if num >= lower and num <= upper:
        return True
    else:
        return False

print(in_range(10, 10, 10))
# should print True
print(in_range(5, 10, 20))







# return False no matter 
 
def always_false(num):                    # first method 
        return False

print(always_false(0))
print(always_false(-1))



def always_false(num):                       # second method 
  if (num > 0 and num < 0):
    return True
  else:
    return False








# using multiple return staements that print when condition is met alongside multiple if statements within a function 


def movie_review(rating):
  if(rating <= 5):
    return "Avoid at all costs!"
  if(rating < 9):
    return "This one was fun."
  return "Outstanding!"



def movie_review(rating):
    if rating <=5:
        return("Avoid at all costs")                  # using multiple return statements to print and if statemnet conditionals alongside
    if rating <9:
        return("This one was fun")
    return("Outstanding")                             # Indentation has to be correct when using a bunch of return statements that print







