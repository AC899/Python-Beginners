#sets = group of elements that are unordered and do not contain duplicates.

music_genres = {'country', 'punk', 'rap', 'techno', 'pop', 'latin'}
print(music_genres)
music2 = set(['country', 'punk', 'rap', 'techno', 'pop', 'latin'])                      #set([insertcontent)]
print(music2)
music_genres_3 = set(['country', 'punk', 'rap', 'pop', 'pop', 'pop'])
print(music_genres_3)   #sets remove duplicate entries i.e. pop is mentioned twice in music_genres 3 but will only be printed once


genre_results = ['rap', 'classical', 'rock', 'rock', 'country', 'rap', 'rock', 'latin', 'country', 'k-pop', 'pop', 'rap', 'rock', 'k-pop',  'rap', 'k-pop', 'rock', 'rap', 'latin', 'pop', 'pop', 'classical', 'pop', 'country', 'rock', 'classical', 'country', 'pop', 'rap', 'latin']

survey_abbreviated = {genre[0:3] for genre in genre_results}     #printing the first three words of all genres in the above list NOTE sets ignore duplicated entries 
print(survey_abbreviated)


#frozen sets frozenset(ENTERARGUMENT)

top_genres = ['rap', 'rock', 'pop']
frozen_top_genres = frozenset(top_genres)      #Creating a frozen set
print(frozen_top_genres)


#frozen sets frozenset(ENTERARGUMENT)
song_tags = {'country', 'folk', 'acoustic'}
other_tags = ['live', 'blues', 'acoustic']

song_tags.add('guitar')               #.add = adds single elements to a set
song_tags.update(other_tags)        #.update allows us to add multiple elements (from a list)
# song_tags.update("Kazoie", "banjoe")       #If you try and add a bunch of strings with this method you get each individual character  - not the term itself 
print(song_tags)





# creating a set out of a dictionary keys value pairs

song_data = {'Retro Words': ['pop', 'warm', 'happy', 'electric']}

# new values we will want to add to th dictionary
user_tag_1 = 'warm'
user_tag_2 = 'exciting'
user_tag_3 = 'electric'

tag_set = set(song_data['Retro Words'])           #  converting the corresponding values for etro Words (Key) into a set 

tag_set.add(user_tag_1)                           #adding the values defined above into the set we have just created 
tag_set.add(user_tag_2)
tag_set.add(user_tag_3)
print(tag_set)

song_data['Retro Words'] = tag_set                 #updating the original dictionary with the new values that we added above
print(song_data)






#removing data from a set.
#Note: items cannot be removed from a frozenset so none of this shit will work on those.

song_tags = {'guitar', 'acoustic', 'folk', 'country', 'live', 'blues'}

song_tags.remove('guitar')             #.remove ... removes he word guitar from the above set  
print(song_tags)

song_tags.discard("Jelly")    #.discard does the same BUT can be used on terms that don't exist without an error      
print(song_tags)             




#removing data from a set.

song_data_users = {'Retro Words': ['pop', 'onion', 'warm', 'helloworld', 'happy', 'spam', 'electric']}  

# Write your code below!

tag_set = set(song_data_users['Retro Words'])   #convering values from dictionary into a set 
print(tag_set)                         #tag_set is only the values from the above dictionary key 
tag_set.remove('onion')             #selecting the values we want to remove from the dictionary     
tag_set.remove('helloworld')
tag_set.remove('spam')

song_data_users['Retro Words'] = tag_set       #replacing the values in the above dictionary with the updated set we constructed above 

print(song_data_users)
